name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"  # Treat warnings as errors for stricter linting

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Clean clone the repository
      - name: Clean Clone Repository
        run: |
          git clone https://github.com/${{ github.repository }} .
          git checkout main
          git reset --hard origin/main
          git clean -fdx
        shell: bash

      # Install the latest stable Rust toolchain
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.81
          components: rustfmt

      # Verify Rust version
      - name: Check Rust Version
        run: rustc --version

      # Clean build artifacts
      - name: Clean Build
        run: cargo clean

      # Check code formatting with rustfmt
      - name: Check Formatting
        run: cargo fmt --check
        continue-on-error: false

      # Build the project
      - name: Build
        run: cargo build --verbose --all-targets
        env:
          RUSTFLAGS: "-Dwarnings"

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Clean clone the repository
      - name: Clean Clone Repository
        run: |
          git clone https://github.com/${{ github.repository }} .
          git checkout main
          git reset --hard origin/main
          git clean -fdx
        shell: bash

      # Install the latest stable Rust toolchain
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.81
          components: rustfmt

      # Verify Rust version
      - name: Check Rust Version
        run: rustc --version

      # Clean build artifacts
      - name: Clean Build
        run: cargo clean

      # Run tests
      - name: Run Tests
        run: cargo test --verbose
        env:
          RUSTFLAGS: "-Dwarnings"
